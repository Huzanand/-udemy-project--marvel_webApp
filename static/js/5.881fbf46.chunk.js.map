{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/errorBoundary/ErrorBoundary.js","hooks/list.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/searchForm/SearchForm.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","src","img","alt","style","displat","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","characterId","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","char","id","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","comicId","_args5","_context5","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","_createClass","key","value","errorInfo","this","setState","props","children","Component","useList","item","customOffset","itemList","setItemList","newItemsLoading","setNewItemsLoading","_useState5","_useState6","setOffset","_useState7","_useState8","itemsEnded","setItemsEnded","_useMarvelService","onRequest","then","onItemsListLoaded","newItemsList","ended","plusOffset","_toConsumableArray","ComicsEnded","View","onCharSelected","thumbnailClazz","slice","_jsxs","className","onClick","href","RandomChar","setChar","onCharLoaded","useEffect","updateChar","Math","floor","random","errorMessage","spinner","Spinner","content","mjolnir","CharList","_useList","itemRefs","useRef","arr","i","imgStyle","CSSTransition","timeout","ref","el","current","tabIndex","forEach","classList","remove","add","focus","TransitionGroup","component","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","SearchForm","onCharSearch","result","Link","to","Formik","initialValues","charName","validate","errors","onSubmit","Form","Field","type","placeholder","FormikErrorMessage","MainPage","selectedChar","setSearchChar","Helmet","decoration"],"mappings":"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","file":"static/js/5.881fbf46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <img src={img} \r\n            alt=\"\" \r\n            style={{displat: 'block', \r\n                    width: '250px', \r\n                    height:'250px', \r\n                    objectFit:'contain', \r\n                    margin: 'auto'}}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase ='https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey ='apikey=cf00dd4f15fa1298d6d5af85d670c37c';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (characterId) => {\r\n        const res = await request(`${_apiBase}characters/${characterId}?&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n \r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description : 'Description is missing..',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic)\r\n    }\r\n\r\n    const getComic = async (comicId= 1045) => {\r\n        const res = await request(`${_apiBase}comics/${comicId}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n\r\n    const _transformComic = comic => {\r\n        return {\r\n            id: comic.id,\r\n\t\t\ttitle: comic.title,\r\n\t\t\tdescription: comic.description || \"There is no description\",\r\n\t\t\tpageCount: comic.pageCount\r\n\t\t\t\t? `${comic.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n\t\t\tlanguage: comic.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comic.prices[0].price\r\n\t\t\t\t? `${comic.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n        }\r\n    }\r\n\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, getCharacterByName, getAllComics, getComic, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () =>{\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type':'appliation/json'}) =>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if(!response.ok){\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state = {error: false};\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.error){\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import { useState} from \"react\";\r\nimport useMarvelService from \"../services/MarvelService\";\r\n\r\nexport const useList = (item, customOffset = 210) => {\r\n    const [itemList, setItemList] = useState([]); \r\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\r\n    const [offset, setOffset] = useState(customOffset);\r\n    const [itemsEnded, setItemsEnded] = useState(false);\r\n\r\n    const {getAllCharacters, getAllComics, loading, error} = useMarvelService();\r\n\r\n    const onRequest = () => {\r\n        setNewItemsLoading(true);\r\n        if (item === 'char') {\r\n            getAllCharacters(offset)\r\n            .then(onItemsListLoaded)\r\n        } else{\r\n            getAllComics(offset)\r\n            .then(onItemsListLoaded)\r\n        }\r\n    }\r\n\r\n    const onItemsListLoaded = (newItemsList) => {\r\n        let ended = false;\r\n        const plusOffset = item === 'char' ? 9 : 8;\r\n\r\n        if(newItemsList.length < plusOffset){            \r\n            ended = true;\r\n        }\r\n\r\n        setItemList(itemList => [...itemList, ...newItemsList]);\r\n        setNewItemsLoading(newItemsLoading => false);\r\n        setOffset(offset => offset + plusOffset);        \r\n        setItemsEnded(ComicsEnded => ended)\r\n    }\r\n\r\n    return {itemList, newItemsLoading, offset, itemsEnded, onRequest, loading, error}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useEffect} from 'react';\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nconst RandomChar = (props) => {\r\n   \r\n    const [char, setChar] =  useState({});\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n    const {onCharSelected} = props;\r\n\r\n    const onCharLoaded = char => {\r\n        setChar(char);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateChar()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const updateChar = () =>{\r\n        clearError();\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        getCharacter(id)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char} onCharSelected={onCharSelected}/> : null;\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br/>\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\" onClick={updateChar}>\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst View = ({char, onCharSelected}) => {\r\n    let {name, description, thumbnail, homepage, wiki, id} = char;\r\n    let thumbnailClazz = 'randomchar__img';\r\n\r\n    if (description){\r\n        if (description.length > 180) description = `${description.slice(0, 180)}...`;\r\n    }\r\n\r\n        if (thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\" || \r\n            thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'){\r\n            thumbnailClazz += ' randomchar__img_notFound'\r\n        } \r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n                    <img src={thumbnail} alt=\"Random character\" className={thumbnailClazz} onClick={() =>onCharSelected(id)}/>\r\n                    <div className=\"randomchar__info\">\r\n                        <p className=\"randomchar__name\">{name}</p>\r\n                        <p className=\"randomchar__descr\">\r\n                            {description}\r\n                        </p>\r\n                        <div className=\"randomchar__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import './charList.scss';\r\n\r\nimport { useEffect, useRef } from 'react';\r\nimport { useList } from '../../hooks/list.hook';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\"\r\n\r\nconst CharList = (props) => {\r\n    const {itemList, newItemsLoading, offset, itemsEnded, onRequest, loading, error} = useList('char');\r\n\r\n    useEffect(() => {\r\n        onRequest()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ||\r\n                item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') {\r\n                    imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <CSSTransition\r\n                    timeout={500}  key={item.id} >\r\n                    <li ref={el => itemRefs.current[i] = el}\r\n                        className=\"char__item\" tabIndex={0}                       \r\n                        onClick={() => {\r\n                            props.onCharSelected(item.id);\r\n                            focusOnItem(i)}}>\r\n                            <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                            <div className=\"char__name\">{item.name}</div>\r\n                    </li>\r\n                </CSSTransition>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                <TransitionGroup component={null}>\r\n                    {items}\r\n                </TransitionGroup>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n        const items = renderItems(itemList)\r\n\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        return (\r\n            <div className=\"char__list\">\r\n                    {errorMessage}\r\n                    {spinner}\r\n                    {items}\r\n                <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newItemsLoading}\r\n                onClick={() => onRequest(offset)}\r\n                style={{'display': itemsEnded ? 'none' : 'block'}}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\n\r\nimport './charInfo.scss';\r\n\r\nconst CharInfo = props => {\r\n    const [char, setChar] = useState(null);\r\n\r\n    const {loading, error, getCharacter, clearError} = useMarvelService();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => updateChar(), [props.charId]);\r\n\r\n    const updateChar = () =>{ \r\n        clearError();\r\n        const {charId} = props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        getCharacter(charId)                                      \r\n            .then(char => setChar(char))                               \r\n    }\r\n\r\n    const skeleton = error || loading || char ? null : <Skeleton/>\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {skeleton}\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n    \r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' ||\r\n    thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif') {\r\n        imgStyle = {'objectFit' : 'unset'};\r\n    }\r\n\r\n    return (\r\n            <>\r\n                <div className=\"char__basics\">\r\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                    <div>\r\n                        <div className=\"char__info-name\">{name}</div>\r\n                        <div className=\"char__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"char__descr\">\r\n                    {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                    {comics.length === 0 ? 'Information is absent.' : null}\r\n                    {\r\n                        comics.map((item, i) => {\r\n                            if (i > 9) return null\r\n\r\n                            return (\r\n                                <li className=\"char__comics-item\" key={i}>\r\n                                    {item.name}\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </>  \r\n    )\r\n}\r\n\r\nexport default CharInfo;","import './searchForm.scss'\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { useState } from 'react';\r\nimport {Formik, Form, Field, ErrorMessage as FormikErrorMessage} from 'formik'\r\nimport {Link} from \"react-router-dom\"\r\n\r\nconst SearchForm = ({onCharSearch}) =>{\r\n    const [char, setChar] = useState('');\r\n    const {getCharacterByName, clearError, loading, error} = useMarvelService();\r\n\r\n    const updateChar = char => {\r\n        clearError();\r\n\r\n        getCharacterByName(char)\r\n            .then(onCharLoaded) \r\n    }\r\n\r\n    const onCharLoaded = (char) =>{\r\n        setChar(char)\r\n        onCharSearch(char[0].id)\r\n    }\r\n\r\n    const errorMessage = error ? <div className=\"char__search-error\">The server isn't working :(</div> : null;\r\n    const result = !char ? null : char.length > 0 ?\r\n            <div className='char__success-wrap'>\r\n                <div className=\"char__success-content\">There is! Visit {char[0].name} page?</div>\r\n                <Link to={`/char/${char[0].id}`} \r\n                      className=\"button button__secondary\">\r\n                    <div className=\"inner\">TO PAGE</div>\r\n                </Link>\r\n            </div> \r\n            : <div className=\"char__search-error\">The character was not found. Check the name and try again</div>\r\n\r\n    return(\r\n        <div className='char__base'>\r\n            <Formik\r\n                initialValues={{charName: ''}}\r\n                validate={value => {\r\n                    const errors = {};\r\n                    if (!value.charName) errors.charName = 'This field is required!'\r\n                    return errors\r\n                }}\r\n                onSubmit={({charName}) => {\r\n                    updateChar(charName)\r\n                }}>\r\n                <Form>\r\n                    <div className='char__base-inner'>\r\n                        <label className=\"char__title\">Or find a character by name:</label>\r\n                        <Field \r\n                            type=\"text\" \r\n                            id={'charName'}\r\n                            name={'charName'} \r\n                            placeholder={'Enter name'}\r\n                            className='char__input'\r\n                        />\r\n                        <button \r\n                            type='submit'\r\n                            disabled={loading}\r\n                            className=\"button button__main\" \r\n                        >\r\n                            <div className=\"inner\">FIND</div>\r\n                        </button>\r\n                        <FormikErrorMessage name={'charName'} component=\"label\" className=\"char__search-error\"/>\r\n                    </div>      \r\n                </Form>\r\n            </Formik>\r\n            {errorMessage}\r\n            {result}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport SearchForm from \"../searchForm/SearchForm\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n    const [searchChar, setSearchChar] = useState(null)\r\n        \r\n    const onCharSelected = id => {\r\n        setChar(id)\r\n    }\r\n\r\n    const onCharSearch = id => {\r\n        setSearchChar(id)\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                name=\"description\"\r\n                content=\"Marvel information portal\"\r\n                />\r\n                <title>Marvel information portal</title>\r\n            </Helmet>\r\n            <ErrorBoundary>\r\n                <RandomChar onCharSelected={onCharSelected}/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>\r\n                <div>\r\n                    <ErrorBoundary>\r\n                        <CharInfo charId={selectedChar}/>\r\n                        <SearchForm onCharSearch={onCharSearch}/>   \r\n                    </ErrorBoundary> \r\n                </div>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;"],"sourceRoot":""}