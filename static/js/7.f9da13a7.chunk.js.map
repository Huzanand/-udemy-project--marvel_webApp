{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/singlePage/SinglePage.js"],"names":["ErrorMessage","_jsx","src","img","alt","style","displat","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","_baseOffset","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","characterId","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","char","id","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","getAllComics","_ref4","_callee4","_args4","_context4","_transformComic","getComic","_ref5","_callee5","comicId","_args5","_context5","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","AppBanner","_jsxs","className","children","avengers","avengersLogo","SinglePage","type","View","console","log","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","Spinner","content","_Fragment"],"mappings":"iGAAe,UAA0B,kC,OCe1BA,IAbM,WACjB,OACIC,cAAA,OAAKC,IAAKC,EACNC,IAAI,GACJC,MAAO,CAACC,QAAS,QACTC,MAAO,QACPC,OAAO,QACPC,UAAU,UACVC,OAAQ,Y,yEC0DbC,IAlEU,WACrB,IAAAC,ECDmB,WACnB,IAAAC,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0BL,mBAAS,MAAKM,EAAAJ,YAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA2BtB,MAAO,CAACH,UAASM,QAzBDC,sBAAW,eAAAC,EAAAC,YAAAC,IAAAC,MAAC,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEjB,OAFmBV,EAAMK,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,MAAOJ,EAAII,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,KAAMH,EAAOG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,CAAC,eAAe,mBAE3FlB,GAAW,GAAMqB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGUG,MAAMd,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARC,EAAQK,EAAAM,MAEDC,GAAG,CAADP,EAAAE,KAAA,eACL,IAAIM,MAAM,mBAADC,OAAoBlB,EAAG,cAAAkB,OAAad,EAASe,SAAU,KAAD,UAAAV,EAAAE,KAAA,GAGtDP,EAASgB,OAAO,KAAD,GAEhB,OAFZf,EAAII,EAAAM,KAEV3B,GAAW,GAAOqB,EAAAY,OAAA,SACXhB,GAAI,QAGS,MAHTI,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAEXrB,GAAW,GACXI,EAASiB,EAAAa,GAAEC,SAASd,EAAAa,GAAA,yBAAAb,EAAAe,UAAAzB,EAAA,mBAI3B,gBAAA0B,GAAA,OAAA9B,EAAA+B,MAAA,KAAAnB,YArB0B,GAqBxB,IAIuBhB,QAAOoC,WAFdjC,uBAAY,kBAAMF,EAAS,QAAO,KD1BPoC,GAAvCzC,EAAOL,EAAPK,QAASM,EAAOX,EAAPW,QAASF,EAAKT,EAALS,MAAOoC,EAAU7C,EAAV6C,WAE1BE,EAAU,4CACVC,EAAS,0CACTC,EAAc,IAEdC,EAAgB,eAAArC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAkC,EAAAC,EAAA5B,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,OAApBsB,EAAM3B,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAGyB,EAAWtB,EAAAE,KAAA,EAC9BlB,EAAQ,GAADyB,OAAIW,EAAQ,8BAAAX,OAA6Be,EAAM,KAAAf,OAAIY,IAAW,KAAD,EAA7E,OAAHI,EAAGzB,EAAAM,KAAAN,EAAAY,OAAA,SACFa,EAAI7B,KAAK8B,QAAQC,IAAIC,IAAoB,wBAAA5B,EAAAe,UAAAzB,OACnD,kBAHqB,OAAAJ,EAAA+B,MAAA,KAAAnB,YAAA,GAKhB+B,EAAY,eAAAC,EAAA3C,YAAAC,IAAAC,MAAG,SAAA0C,EAAOC,GAAW,IAAAP,EAAA,OAAArC,IAAAW,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACjBlB,EAAQ,GAADyB,OAAIW,EAAQ,eAAAX,OAAcuB,EAAW,MAAAvB,OAAKY,IAAW,KAAD,EAApE,OAAHI,EAAGQ,EAAA3B,KAAA2B,EAAArB,OAAA,SACFgB,EAAoBH,EAAI7B,KAAK8B,QAAQ,KAAG,wBAAAO,EAAAlB,UAAAgB,OAClD,gBAHiBf,GAAA,OAAAc,EAAAb,MAAA,KAAAnB,YAAA,GAKZoC,EAAkB,eAAAC,EAAAhD,YAAAC,IAAAC,MAAG,SAAA+C,EAAOC,GAAI,IAAAZ,EAAA,OAAArC,IAAAW,MAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACtBlB,EAAQ,GAADyB,OAAIW,EAAQ,oBAAAX,OAAmB4B,EAAI,KAAA5B,OAAIY,IAAW,KAAD,EAAjE,OAAHI,EAAGa,EAAAhC,KAAAgC,EAAA1B,OAAA,SACFa,EAAI7B,KAAK8B,QAAQC,IAAIC,IAAoB,wBAAAU,EAAAvB,UAAAqB,OAChD,gBAH0BG,GAAA,OAAAJ,EAAAlB,MAAA,KAAAnB,YAAA,GAKlB8B,EAAsB,SAACY,GAEzB,MAAO,CACHC,GAAID,EAAKC,GACTJ,KAAMG,EAAKH,KACXK,YAAaF,EAAKE,YAAcF,EAAKE,YAAc,2BACnDC,UAAWH,EAAKG,UAAUC,KAAO,IAAMJ,EAAKG,UAAUE,UACtDC,SAAUN,EAAKO,KAAK,GAAGxD,IACvByD,KAAMR,EAAKO,KAAK,GAAGxD,IACnB0D,OAAQT,EAAKS,OAAOC,QAItBC,EAAY,eAAAC,EAAAjE,YAAAC,IAAAC,MAAG,SAAAgE,IAAA,IAAA7B,EAAAC,EAAA6B,EAAAxD,UAAA,OAAAV,IAAAW,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,OAA2B,OAApBsB,EAAM8B,EAAAnD,OAAA,QAAAC,IAAAkD,EAAA,GAAAA,EAAA,GAAGhC,EAAWiC,EAAArD,KAAA,EAC1BlB,EAAQ,GAADyB,OAAIW,EAAQ,8CAAAX,OAA6Ce,EAAM,KAAAf,OAAIY,IAAW,KAAD,EAA7F,OAAHI,EAAG8B,EAAAjD,KAAAiD,EAAA3C,OAAA,SACFa,EAAI7B,KAAK8B,QAAQC,IAAI6B,IAAgB,wBAAAD,EAAAxC,UAAAsC,OAC/C,kBAHiB,OAAAD,EAAAnC,MAAA,KAAAnB,YAAA,GAKZ2D,EAAQ,eAAAC,EAAAvE,YAAAC,IAAAC,MAAG,SAAAsE,IAAA,IAAAC,EAAAnC,EAAAoC,EAAA/D,UAAA,OAAAV,IAAAW,MAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,OAAoB,OAAb0D,EAAOC,EAAA1D,OAAA,QAAAC,IAAAyD,EAAA,GAAAA,EAAA,GAAE,KAAIC,EAAA5D,KAAA,EACflB,EAAQ,GAADyB,OAAIW,EAAQ,WAAAX,OAAUmD,EAAO,KAAAnD,OAAIY,IAAW,KAAD,EAA3D,OAAHI,EAAGqC,EAAAxD,KAAAwD,EAAAlD,OAAA,SACF4C,EAAgB/B,EAAI7B,KAAK8B,QAAQ,KAAG,wBAAAoC,EAAA/C,UAAA4C,OAC9C,kBAHa,OAAAD,EAAAzC,MAAA,KAAAnB,YAAA,GAMR0D,EAAkB,SAAAO,GAAU,IAADC,EAC7B,MAAO,CACHvB,GAAIsB,EAAMtB,GACnBwB,MAAOF,EAAME,MACbvB,YAAaqB,EAAMrB,aAAe,0BAClCwB,UAAWH,EAAMG,UAAS,GAAAzD,OACpBsD,EAAMG,UAAS,OAClB,2CACHvB,UAAWoB,EAAMpB,UAAUC,KAAO,IAAMmB,EAAMpB,UAAUE,UACxDsB,UAA8B,QAApBH,EAAAD,EAAMK,YAAY,UAAE,IAAAJ,OAAA,EAApBA,EAAsBG,WAAY,QAC5CE,MAAON,EAAMO,OAAO,GAAGD,MAAK,GAAA5D,OACtBsD,EAAMO,OAAO,GAAGD,MAAK,KACxB,kBAKF,MAAO,CAAC3F,UAASI,QAAOyC,mBAAkBM,eAAcK,qBAAoBiB,eAAcM,WAAUvC,gB,+DEjEzF,MAA0B,qCCA1B,MAA0B,0C,OCiB1BqD,IAbG,WACd,OACIC,eAAA,OAAKC,UAAU,cAAaC,SAAA,CACxBhH,cAAA,OAAKC,IAAKgH,EAAU9G,IAAI,aACxB2G,eAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,yBACRhH,cAAA,SAAK,iBAG/BA,cAAA,OAAKC,IAAKiH,EAAc/G,IAAI,uB,oIC+BzBgH,UAlCI,SAAH3F,GAAsB,IAAjB4F,EAAI5F,EAAJ4F,KAAMC,EAAI7F,EAAJ6F,KACvBC,QAAQC,IAAIH,GACZ,IAAOrC,EAAMyC,cAANzC,GACPnE,EAAwBC,mBAAS,MAAKC,EAAAC,YAAAH,EAAA,GAA/BsB,EAAIpB,EAAA,GAAE2G,EAAO3G,EAAA,GACpB4G,EAA6DhH,cAAtDM,EAAO0G,EAAP1G,QAASI,EAAKsG,EAALtG,MAAO2E,EAAQ2B,EAAR3B,SAAU5B,EAAYuD,EAAZvD,aAAcX,EAAUkE,EAAVlE,WAE/CmE,qBAAU,WACNC,MAED,CAAC7C,IAEJ,IAAM6C,EAAa,WACfpE,IACS,UAAT4D,EAAmBrB,EAAShB,GAAI8C,KAAKC,GAAgB3D,EAAaY,GAAI8C,KAAKC,IAGzEA,EAAe,SAAC5F,GAClBuF,EAAQvF,IAGN6F,EAAe3G,EAAQpB,cAACD,IAAY,IAAK,KACzCiI,EAAUhH,EAAUhB,cAACiI,IAAO,IAAK,KACjCC,EAAYlH,GAAWI,IAAUc,EAA8B,KAAtBlC,cAACqH,EAAI,CAACnF,KAAMA,IAE3D,OACI4E,eAAAqB,WAAA,CAAAnB,SAAA,CACIhH,cAAC6G,IAAS,IACTkB,EACAC,EACAE","file":"static/js/7.f9da13a7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\"\r\n\r\nconst ErrorMessage = () => {\r\n    return(\r\n        <img src={img} \r\n            alt=\"\" \r\n            style={{displat: 'block', \r\n                    width: '250px', \r\n                    height:'250px', \r\n                    objectFit:'contain', \r\n                    margin: 'auto'}}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase ='https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey ='apikey=cf00dd4f15fa1298d6d5af85d670c37c';\r\n    const _baseOffset = 210;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (characterId) => {\r\n        const res = await request(`${_apiBase}characters/${characterId}?&${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n \r\n    const _transformCharacter = (char) => {\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description : 'Description is missing..',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic)\r\n    }\r\n\r\n    const getComic = async (comicId= 1045) => {\r\n        const res = await request(`${_apiBase}comics/${comicId}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n\r\n    const _transformComic = comic => {\r\n        return {\r\n            id: comic.id,\r\n\t\t\ttitle: comic.title,\r\n\t\t\tdescription: comic.description || \"There is no description\",\r\n\t\t\tpageCount: comic.pageCount\r\n\t\t\t\t? `${comic.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comic.thumbnail.path + \".\" + comic.thumbnail.extension,\r\n\t\t\tlanguage: comic.textObjects[0]?.language || \"en-us\",\r\n\t\t\tprice: comic.prices[0].price\r\n\t\t\t\t? `${comic.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n        }\r\n    }\r\n\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, getCharacterByName, getAllComics, getComic, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () =>{\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type':'appliation/json'}) =>{\r\n\r\n        setLoading(true);\r\n\r\n        try{\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if(!response.ok){\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e){\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../../services/MarvelService';\r\nimport Spinner from '../../spinner/Spinner';\r\nimport ErrorMessage from '../../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../../appBanner/AppBanner\";\r\nimport './singlePage.scss';\r\n\r\nconst SinglePage = ({type, View}) => {\r\n    console.log(type)\r\n    const {id} = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {loading, error, getComic, getCharacter, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData()\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [id])\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n        type === 'comic' ? getComic(id).then(onDataLoaded) : getCharacter(id).then(onDataLoaded)\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !data) ? <View data={data}/> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SinglePage;"],"sourceRoot":""}